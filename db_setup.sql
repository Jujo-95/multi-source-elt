--CREATE WAREHOUSE INGEST;
CREATE ROLE INGEST;
GRANT USAGE ON WAREHOUSE INGEST TO ROLE INGEST;
GRANT OPERATE ON WAREHOUSE INGEST TO ROLE INGEST;
CREATE DATABASE INGEST;
CREATE SCHEMA INGEST;
GRANT OWNERSHIP ON DATABASE INGEST TO ROLE INGEST;
GRANT OWNERSHIP ON SCHEMA INGEST.INGEST TO ROLE INGEST;

--CREATE USER INGEST PASSWORD='ingest' LOGIN_NAME='INGEST' MUST_CHANGE_PASSWORD=FALSE, DISABLED=FALSE, DEFAULT_WAREHOUSE='INGEST', DEFAULT_NAMESPACE='INGEST.INGEST', DEFAULT_ROLE='INGEST';
GRANT ROLE INGEST TO USER INGEST;
GRANT ROLE INGEST TO USER juangarciau;

ALTER USER INGEST SET RSA_PUBLIC_KEY='MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAngCh7qN59aOo7h1Gj5umw9a3HKU7T7d4iy+zkz+bO0eM1RQ77DnSOv1j4N+102YtCtaWeCfPSZDqcFr5XkLk6WjDzwMIXdEBtBfmzTwiz1dCKNi5HACC1wkX4mCD51mrfSrt5HsDrvjLyJQYoO94cp2rCOi9iGBPQ7sqlB+ETl6DSU++xSSrW9ZBNs/i07nfSqMDkc9ZjA5fMP43Jj35k7uDzvHGLQLxZtlNgeXskPQ9h9dyW2VuazH6UEyHs98nHUolV0H5nX1/bVPsGpc6l8hpp/S1wYhCpV0YZ67lNDl3/s2L0W7WhMpMlVcR5wqauSx8YwITWI4QGDn7Bm5kSVM0iHHfn+u52uSj//n7A/tTkwQTgG4nA75RGzFvheHida3e5vMJVj6bozNbt9KNE/FC1lHn/UZpfiH3hS1zao04HJBYTMBSZ9ejnODYtCkOt/VvuNXBfbehxkucvMQRZOXOJyZ0JXGC0WWQXdk9txBKkNm+0a2t4pcTSLD3q8J1BeZgZfLHMZHouX+fHO4eaIFx3S7zegoVK7x08VDmxSAZ8s42SkawTeDKrU1JTb2zLnCVp2FpGhpy9Z8trFFAQPPYimXVtQQwrxik6nFGqkTIzYb3Vofq0gVhDrkXUjTqdNMKXTvf6hKHejjrTf+0RtCTnJfDoytBG5KEywWgbysCAwEAAQ==';

USE ROLE INGEST;
CREATE OR REPLACE TABLE LIFT_TICKETS_PY_INSERT (TXID varchar(255), RFID varchar(255), RESORT varchar(255), PURCHASE_TIME datetime, EXPIRATION_TIME date, DAYS number, NAME varchar(255), ADDRESS variant, PHONE varchar(255), EMAIL varchar(255), EMERGENCY_CONTACT variant);

SELECT * FROM LIFT_TICKETS_PY_INSERT

USE ROLE INGEST;
CREATE OR REPLACE TABLE LIFT_TICKETS_PY_COPY_INTO (TXID varchar(255), RFID varchar(255), RESORT varchar(255), PURCHASE_TIME datetime, EXPIRATION_TIME date, DAYS number, NAME varchar(255), ADDRESS variant, PHONE varchar(255), EMAIL varchar(255), EMERGENCY_CONTACT variant);

select count(*) from LIFT_TICKETS_PY_COPY_INTO

--SNOWPIPE
USE ROLE INGEST;
CREATE OR REPLACE TABLE LIFT_TICKETS_PY_SNOWPIPE (TXID varchar(255), RFID varchar(255), RESORT varchar(255), PURCHASE_TIME datetime, EXPIRATION_TIME date, DAYS number, NAME varchar(255), ADDRESS variant, PHONE varchar(255), EMAIL varchar(255), EMERGENCY_CONTACT variant);

CREATE PIPE LIFT_TICKETS_PY_SNOWPIPE AS COPY INTO LIFT_TICKETS_PY_SNOWPIPE FILE_FORMAT = (TYPE='PARQUET') MATCH_BY_COLUMN_NAME=CASE_SENSITIVE;

SELECT count(*) FROM LIFT_TICKETS_PY_SNOWPIPE;

SELECT SYSTEM$PIPE_STATUS('LIFT_TICKETS_PY_SNOWPIPE');



USE ROLE ACCOUNTADMIN;
GRANT EXECUTE TASK ON ACCOUNT TO ROLE INGEST;
GRANT EXECUTE MANAGED TASK ON ACCOUNT TO ROLE INGEST;

USE ROLE INGEST;
CREATE OR REPLACE TABLE LIFT_TICKETS_PY_SERVERLESS (TXID varchar(255), RFID varchar(255), RESORT varchar(255), PURCHASE_TIME datetime, EXPIRATION_TIME date, DAYS number, NAME varchar(255), ADDRESS variant, PHONE varchar(255), EMAIL varchar(255), EMERGENCY_CONTACT variant);

CREATE OR REPLACE TASK LIFT_TICKETS_PY_SERVERLESS USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE='XSMALL'
AS
COPY INTO LIFT_TICKETS_PY_SERVERLESS FILE_FORMAT=(TYPE='PARQUET') MATCH_BY_COLUMN_NAME=CASE_SENSITIVE PURGE=TRUE;


SELECT count(*) FROM LIFT_TICKETS_PY_SERVERLESS

SELECT * FROM LIFT_TICKETS_KAFKA_STREAMING_SCHEMATIZED;

-- To generate a key pair for the INGEST user, run the following in your shell:

-- openssl genrsa 4096 | openssl pkcs8 -topk8 -inform PEM -out rsa_key.p8 -nocrypt
-- openssl rsa -in rsa_key.p8 -pubout -out rsa_key.pub
-- PUBK=`cat ./rsa_key.pub | grep -v KEY- | tr -d '\012'`
-- echo "ALTER USER INGEST SET RSA_PUBLIC_KEY='$PUBK';"
-- Run the sql from the output to set the RSA_PUBLIC_KEY for the INGEST user.

-- To get the private key for this user run the following in your shell:

-- PRVK=`cat ./rsa_key.p8 | grep -v KEY- | tr -d '\012'`
-- echo "PRIVATE_KEY=$PRVK"

-- openssl genrsa 4096 | openssl pkcs8 -topk8 -inform PEM -out rsa_key.p8 -nocrypt
-- openssl rsa -in rsa_key.p8 -pubout -out rsa_key.pub
-- PUBK=`cat ./rsa_key.pub | grep -v KEY- | tr -d '\012'`
-- echo "ALTER USER INGEST SET RSA_PUBLIC_KEY='$PUBK';"